# Generated by Django 3.0.6 on 2020-06-17 08:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import projects.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(help_text='Unique value for product page URL, created automatically from name.', unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for keywords meta tag', max_length=255)),
                ('meta_description', models.CharField(blank=True, help_text='Content for description meta tag', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(blank=True, help_text='e.g., Tbilisi State University', max_length=250)),
                ('institute_or_faculty', models.CharField(blank=True, help_text='e.g., Institute of Economics', max_length=250)),
                ('department', models.CharField(blank=True, help_text='e.g., Department of Economics', max_length=250)),
                ('degree', models.CharField(blank=True, choices=[('Ph.D.', 'Doctor of Philosophy'), ('M.Sc.', 'Masters'), ('B.Sc.', 'Bachelor'), ('12th', 'High School')], max_length=50)),
                ('qualification', models.CharField(blank=True, help_text='e.g., Economist', max_length=250)),
                ('location', models.CharField(blank=True, help_text='e.g., Kyiv, Ukraine', max_length=250)),
                ('school_url', models.URLField(blank=True, verbose_name='School URL')),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField()),
                ('summary', models.TextField(blank=True, help_text='e.g., Diploma with Honours')),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-completion_date'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('image', models.ImageField(blank=True, upload_to=projects.models.image_folder)),
                ('location', models.CharField(blank=True, help_text='e.g., Kyiv, Ukraine', max_length=250)),
                ('title', models.CharField(blank=True, max_length=250)),
                ('company_url', models.URLField(blank=True, verbose_name='Company URL')),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('completion_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'jobs',
                'ordering': ['-completion_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='LangSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Ukrainian, English', max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('level', models.IntegerField(default=False, help_text='Indicate your level skill in percentage')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, choices=[('Dr', 'Doctor'), ('PhD', 'Doctor of Philosophy')], default=False, max_length=50)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/%d/')),
                ('overview', models.TextField(blank=True)),
                ('locality', models.CharField(blank=True, help_text='e.g., city such as Kyiv', max_length=255)),
                ('country', models.CharField(blank=True, help_text='e.g., Ukraine', max_length=64)),
                ('years_experience', models.IntegerField(blank=True, default=False)),
                ('partners', models.IntegerField(blank=True, default=False)),
                ('completed_projects', models.IntegerField(blank=True, default=False)),
                ('clients', models.IntegerField(blank=True, default=False, help_text='e.g., amount of clients')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.IntegerField(blank=True, default=False)),
                ('facebook', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('instagram', models.URLField(blank=True)),
                ('skype', models.CharField(blank=True, help_text='skype: user_name', max_length=255)),
                ('linkedin', models.URLField(blank=True)),
                ('pinterest', models.URLField(blank=True)),
                ('resume_file', models.FileField(blank=True, upload_to='resume/%Y/%m/%d/')),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True, verbose_name='Meta Keywords')),
                ('meta_description', models.TextField(blank=True, help_text='Content for description meta tag, maximum are 200 characters', max_length=255, null=True, verbose_name='Meta Description')),
            ],
            options={
                'verbose_name_plural': 'Personal Info',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to=projects.models.blog_image_folder)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Skillset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250)),
                ('slug', models.SlugField(max_length=250)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='e.g., C++, Python', max_length=250)),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('level', models.IntegerField(default=False, help_text='Indicate your level skill in percentage')),
                ('is_active', models.BooleanField(default=True)),
                ('skillset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Skillset')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, upload_to=projects.models.project_image_folder)),
                ('description', models.TextField(blank=True)),
                ('technology', models.CharField(max_length=20)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Content for description meta tag, maximum are 200 characters', max_length=255, null=True)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Category')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('-added',),
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Simple', 'Simple'), ('Middle', 'Middle'), ('Complex', 'Complex')], default='Simple', max_length=10)),
                ('support', models.CharField(blank=True, choices=[('Mail Support', 'Mail Support'), ('Endless Support', 'Endless Support')], default='Mail Support', max_length=255)),
                ('name', models.CharField(blank=True, help_text='Project name', max_length=255)),
                ('instrument', models.CharField(blank=True, default='Django', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Portfolio, Blog, Ecommerce,...')),
                ('time_delivery', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Category')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='PostImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=projects.models.blog_image_folder)),
                ('caption', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=70, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.Post')),
            ],
            options={
                'verbose_name': 'Post Image',
                'verbose_name_plural': 'Post Images',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to=projects.models.project_image_folder)),
                ('caption', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=70, null=True)),
                ('added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.Project')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.Post')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
